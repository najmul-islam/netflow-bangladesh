{
    "openapi": "3.0.0",
    "info": {
        "title": "NetFlow Bangladesh LMS API",
        "description": "Complete Learning Management System API with comprehensive functionality for course management, student enrollment, progress tracking, assessments, certificates, messaging, and more.",
        "termsOfService": "http://netflow-bd.com/terms",
        "contact": {
            "name": "NetFlow Bangladesh Support",
            "email": "support@netflow-bd.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "NetFlow Bangladesh LMS API Server"
        }
    ],
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account and return authentication token",
                "operationId": "d43ecdfd17aca209ecd9b0a8b370e2c0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "username",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate user and return access token",
                "operationId": "be2e78e5f93182d4403f839cc516d312",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "login",
                                    "password"
                                ],
                                "properties": {
                                    "login": {
                                        "description": "Email or username",
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "remember": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Revoke the current access token",
                "operationId": "0b366af9c6842623aab9c8827c519b89",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user",
                "description": "Get authenticated user's profile information",
                "operationId": "4f405e33417b7b74565767c1a7b51231",
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "description": "Revoke current token and generate a new one",
                "operationId": "1a1e54a850ca4218b0388d92093ab652",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token refreshed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/public/batches": {
            "get": {
                "tags": [
                    "Public Batches"
                ],
                "summary": "List available batches",
                "description": "Get a list of batches that are open for enrollment",
                "operationId": "c6f7040d1f243d08f21e294e6a45d9b0",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "query",
                        "description": "Filter by course ID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (max 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "batch_id": {
                                                        "type": "string",
                                                        "example": "uuid-string"
                                                    },
                                                    "batch_name": {
                                                        "type": "string",
                                                        "example": "Web Dev Batch 2024-A"
                                                    },
                                                    "start_date": {
                                                        "type": "string",
                                                        "example": "2024-02-01"
                                                    },
                                                    "end_date": {
                                                        "type": "string",
                                                        "example": "2024-04-01"
                                                    },
                                                    "enrollment_start": {
                                                        "type": "string",
                                                        "example": "2024-01-01"
                                                    },
                                                    "enrollment_end": {
                                                        "type": "string",
                                                        "example": "2024-01-25"
                                                    },
                                                    "max_students": {
                                                        "type": "integer",
                                                        "example": 30
                                                    },
                                                    "enrolled_count": {
                                                        "type": "integer",
                                                        "example": 15
                                                    },
                                                    "available_spots": {
                                                        "type": "integer",
                                                        "example": 15
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "open"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "example": 99.99
                                                    },
                                                    "currency": {
                                                        "type": "string",
                                                        "example": "USD"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 8
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/categories": {
            "get": {
                "tags": [
                    "Public Categories"
                ],
                "summary": "List all categories",
                "description": "Get a list of all course categories with course counts",
                "operationId": "e3b74936675375e5e955363de18ea289",
                "parameters": [
                    {
                        "name": "include_empty",
                        "in": "query",
                        "description": "Include categories with no courses",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "category_id": {
                                                        "type": "string",
                                                        "example": "uuid-string"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Programming"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Learn programming languages and frameworks"
                                                    },
                                                    "slug": {
                                                        "type": "string",
                                                        "example": "programming"
                                                    },
                                                    "icon": {
                                                        "type": "string",
                                                        "example": "icon.png"
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "courses_count": {
                                                        "type": "integer",
                                                        "example": 15
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-01-01T00:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/courses": {
            "get": {
                "tags": [
                    "Public Courses"
                ],
                "summary": "List all published courses",
                "description": "Get a paginated list of all published courses available for enrollment",
                "operationId": "9faa75a8bc9bbb227c76c20dd27ca977",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (max 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter by category ID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in course title and description",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "web development"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "title",
                                "created_at",
                                "price",
                                "estimated_duration_hours"
                            ],
                            "example": "title"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "example": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "course_id": {
                                                        "type": "string",
                                                        "example": "uuid-string"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Web Development Fundamentals"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Learn the basics of web development"
                                                    },
                                                    "short_description": {
                                                        "type": "string",
                                                        "example": "Intro to web dev"
                                                    },
                                                    "thumbnail_url": {
                                                        "type": "string",
                                                        "example": "https://example.com/thumb.jpg"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "example": 99.99
                                                    },
                                                    "currency": {
                                                        "type": "string",
                                                        "example": "USD"
                                                    },
                                                    "estimated_duration_hours": {
                                                        "type": "integer",
                                                        "example": 40
                                                    },
                                                    "difficulty_level": {
                                                        "type": "string",
                                                        "example": "beginner"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "published"
                                                    },
                                                    "instructor_count": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "batch_count": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-01-01T00:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-01-01T00:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/courses/{course_id}": {
            "get": {
                "tags": [
                    "Public Courses"
                ],
                "summary": "Get course details",
                "description": "Get detailed information about a specific published course",
                "operationId": "8540aa2f07d6b38c6c9d7dbc298ef5d4",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "description": "The course ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "course_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Web Development Fundamentals"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Complete description of the course..."
                                                },
                                                "short_description": {
                                                    "type": "string",
                                                    "example": "Intro to web dev"
                                                },
                                                "thumbnail_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/thumb.jpg"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "example": 99.99
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "estimated_duration_hours": {
                                                    "type": "integer",
                                                    "example": 40
                                                },
                                                "difficulty_level": {
                                                    "type": "string",
                                                    "example": "beginner"
                                                },
                                                "prerequisites": {
                                                    "type": "string",
                                                    "example": "Basic computer skills"
                                                },
                                                "learning_outcomes": {
                                                    "type": "string",
                                                    "example": "You will learn HTML, CSS, JavaScript"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "published"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/courses/{course_id}/curriculum": {
            "get": {
                "tags": [
                    "Public Courses"
                ],
                "summary": "Get course curriculum",
                "description": "Get the detailed curriculum structure for a course including modules and lessons",
                "operationId": "6ddd5ec687f81c404ee4fb09cac0357b",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "description": "The course ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course curriculum",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "course_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Web Development Fundamentals"
                                                },
                                                "modules": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "module_id": {
                                                                "type": "string",
                                                                "example": "uuid-string"
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Introduction to Web Development"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Basic concepts and setup"
                                                            },
                                                            "sort_order": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "duration_minutes": {
                                                                "type": "integer",
                                                                "example": 120
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/assessments": {
            "get": {
                "tags": [
                    "User Assessments"
                ],
                "summary": "Get available assessments",
                "description": "Get all assessments for user's enrolled batches",
                "operationId": "dc671bd857bf3d078f38974be577742f",
                "parameters": [
                    {
                        "name": "batch_id",
                        "in": "query",
                        "description": "Filter by batch ID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by assessment status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "upcoming",
                                "active",
                                "completed",
                                "expired"
                            ],
                            "example": "active"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Available assessments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "assessment_id": {
                                                        "type": "string",
                                                        "example": "uuid-string"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "HTML & CSS Quiz"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Test your knowledge of HTML and CSS"
                                                    },
                                                    "assessment_type": {
                                                        "type": "string",
                                                        "example": "quiz"
                                                    },
                                                    "total_marks": {
                                                        "type": "integer",
                                                        "example": 50
                                                    },
                                                    "passing_marks": {
                                                        "type": "integer",
                                                        "example": 35
                                                    },
                                                    "duration_minutes": {
                                                        "type": "integer",
                                                        "example": 60
                                                    },
                                                    "start_date": {
                                                        "type": "string",
                                                        "example": "2024-01-20T09:00:00Z"
                                                    },
                                                    "end_date": {
                                                        "type": "string",
                                                        "example": "2024-01-22T23:59:59Z"
                                                    },
                                                    "max_attempts": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "active"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/assessments/{assessment_id}/start": {
            "post": {
                "tags": [
                    "User Assessments"
                ],
                "summary": "Start assessment attempt",
                "description": "Start a new attempt for an assessment",
                "operationId": "fe30202a56310d9052bc199a805ccd19",
                "parameters": [
                    {
                        "name": "assessment_id",
                        "in": "path",
                        "description": "The assessment ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Assessment attempt started",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "attempt_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "assessment_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "started_at": {
                                                    "type": "string",
                                                    "example": "2024-01-20T14:30:00Z"
                                                },
                                                "time_limit_minutes": {
                                                    "type": "integer",
                                                    "example": 60
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "example": "2024-01-20T15:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot start assessment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot start assessment"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/assessments/attempts/{attempt_id}/submit": {
            "post": {
                "tags": [
                    "User Assessments"
                ],
                "summary": "Submit assessment answers",
                "description": "Submit answers for an assessment attempt",
                "operationId": "44bb4708e293165e50203dbc23b8b27c",
                "parameters": [
                    {
                        "name": "attempt_id",
                        "in": "path",
                        "description": "The attempt ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "answers"
                                ],
                                "properties": {
                                    "answers": {
                                        "description": "Array of question answers",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "question_id"
                                            ],
                                            "properties": {
                                                "question_id": {
                                                    "description": "Question ID",
                                                    "type": "string"
                                                },
                                                "selected_options": {
                                                    "description": "Array of selected option IDs",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "text_answer": {
                                                    "description": "Text answer for essay questions",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Assessment submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "attempt_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "score": {
                                                    "type": "integer",
                                                    "example": 42
                                                },
                                                "total_marks": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "percentage": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 84
                                                },
                                                "passed": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "completed_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-20T15:25:00Z"
                                                },
                                                "time_taken_minutes": {
                                                    "type": "integer",
                                                    "example": 55
                                                },
                                                "correct_answers": {
                                                    "type": "integer",
                                                    "example": 8
                                                },
                                                "total_questions": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Assessment submitted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot submit assessment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot submit assessment"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Time limit exceeded"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attempt not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Attempt not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The answers field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "answers": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The answers field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/assessments/attempts/{attempt_id}/results": {
            "get": {
                "tags": [
                    "User Assessments"
                ],
                "summary": "Get attempt results",
                "description": "Get detailed results for a completed assessment attempt",
                "operationId": "de0c9c8eec46b66af4230525dcab4db9",
                "parameters": [
                    {
                        "name": "attempt_id",
                        "in": "path",
                        "description": "The attempt ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assessment results retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "attempt_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "assessment_title": {
                                                    "type": "string",
                                                    "example": "HTML & CSS Quiz"
                                                },
                                                "score": {
                                                    "type": "integer",
                                                    "example": 42
                                                },
                                                "total_marks": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "percentage": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 84
                                                },
                                                "passed": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "started_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-20T14:30:00Z"
                                                },
                                                "completed_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-20T15:25:00Z"
                                                },
                                                "time_taken_minutes": {
                                                    "type": "integer",
                                                    "example": 55
                                                },
                                                "questions_summary": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "correct": {
                                                            "type": "integer",
                                                            "example": 8
                                                        },
                                                        "incorrect": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "unanswered": {
                                                            "type": "integer",
                                                            "example": 0
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "detailed_responses": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "question_id": {
                                                                "type": "string",
                                                                "example": "uuid-string"
                                                            },
                                                            "question_text": {
                                                                "type": "string",
                                                                "example": "What does HTML stand for?"
                                                            },
                                                            "your_answer": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "example": "HyperText Markup Language"
                                                                }
                                                            },
                                                            "correct_answer": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "example": "HyperText Markup Language"
                                                                }
                                                            },
                                                            "is_correct": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "marks_awarded": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "marks_possible": {
                                                                "type": "integer",
                                                                "example": 5
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attempt not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Attempt not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/certificates": {
            "get": {
                "tags": [
                    "User Certificates"
                ],
                "summary": "Get user certificates",
                "description": "Get all certificates for the authenticated user",
                "operationId": "baa3e975d9a83fa1f92665d5a394e9fd",
                "parameters": [
                    {
                        "name": "batch_id",
                        "in": "query",
                        "description": "Filter by batch ID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by certificate status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "issued",
                                "revoked"
                            ],
                            "example": "issued"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (max 100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User certificates retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "certificate_id": {
                                                        "type": "string",
                                                        "example": "uuid-string"
                                                    },
                                                    "certificate_number": {
                                                        "type": "string",
                                                        "example": "CERT-2024-001"
                                                    },
                                                    "issued_date": {
                                                        "type": "string",
                                                        "example": "2024-01-20"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "issued"
                                                    },
                                                    "course_title": {
                                                        "type": "string",
                                                        "example": "Web Development Fundamentals"
                                                    },
                                                    "batch_name": {
                                                        "type": "string",
                                                        "example": "Web Dev Batch 2024-A"
                                                    },
                                                    "completion_date": {
                                                        "type": "string",
                                                        "example": "2024-01-18"
                                                    },
                                                    "final_score": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 85.5
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/certificates/{certificate_id}": {
            "get": {
                "tags": [
                    "User Certificates"
                ],
                "summary": "Get certificate details",
                "description": "Get detailed information about a specific certificate",
                "operationId": "54041911c6ee30ef26e1e8ba0ddfff34",
                "parameters": [
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "The certificate ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Certificate details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "certificate_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "certificate_number": {
                                                    "type": "string",
                                                    "example": "CERT-2024-001"
                                                },
                                                "issued_date": {
                                                    "type": "string",
                                                    "example": "2024-01-20"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "issued"
                                                },
                                                "course_title": {
                                                    "type": "string",
                                                    "example": "Web Development Fundamentals"
                                                },
                                                "batch_name": {
                                                    "type": "string",
                                                    "example": "Web Dev Batch 2024-A"
                                                },
                                                "completion_date": {
                                                    "type": "string",
                                                    "example": "2024-01-18"
                                                },
                                                "final_score": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 85.5
                                                },
                                                "certificate_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/certificates/cert-001.pdf"
                                                },
                                                "user_details": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Certificate details retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Certificate not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Certificate not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/enrollments": {
            "get": {
                "tags": [
                    "User Enrollments"
                ],
                "summary": "Get user enrollments",
                "description": "Get all enrollments for the authenticated user",
                "operationId": "dc27f2bd7bbd492b83c899d0257ca9e2",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by enrollment status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "active",
                                "completed",
                                "dropped",
                                "suspended"
                            ],
                            "example": "active"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (max 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User enrollments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "enrollment_id": {
                                                        "type": "string",
                                                        "example": "uuid-string"
                                                    },
                                                    "enrollment_date": {
                                                        "type": "string",
                                                        "example": "2024-01-15"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "active"
                                                    },
                                                    "progress_percentage": {
                                                        "type": "number",
                                                        "example": 65.5
                                                    },
                                                    "completion_date": {
                                                        "type": "string",
                                                        "example": null
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Enrollments"
                ],
                "summary": "Enroll in a batch",
                "description": "Enroll the authenticated user in a course batch",
                "operationId": "09853aa6f59a95a7ba115d9274b0ee55",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "batch_id"
                                ],
                                "properties": {
                                    "batch_id": {
                                        "description": "The batch ID to enroll in",
                                        "type": "string",
                                        "example": "uuid-string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully enrolled in the batch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "enrollment_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "batch_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "enrollment_date": {
                                                    "type": "string",
                                                    "example": "2024-01-15"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "batch": {
                                                    "properties": {
                                                        "batch_id": {
                                                            "type": "string",
                                                            "example": "uuid-string"
                                                        },
                                                        "batch_name": {
                                                            "type": "string",
                                                            "example": "Web Dev Batch 2024-A"
                                                        },
                                                        "price": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 99.99
                                                        },
                                                        "currency": {
                                                            "type": "string",
                                                            "example": "USD"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully enrolled in the batch"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Enrollment not available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Enrollment not available"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Batch is full"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Already enrolled in this batch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Already enrolled in this batch"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The batch id field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "batch_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The batch id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/enrollments/{enrollment_id}": {
            "get": {
                "tags": [
                    "User Enrollments"
                ],
                "summary": "Get enrollment details",
                "description": "Get detailed information about a specific enrollment",
                "operationId": "b674215258efb4f8629df055b4379428",
                "parameters": [
                    {
                        "name": "enrollment_id",
                        "in": "path",
                        "description": "The enrollment ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Enrollment details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "enrollment_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "enrollment_date": {
                                                    "type": "string",
                                                    "example": "2024-01-15"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "progress_percentage": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 65.5
                                                },
                                                "completion_date": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "batch": {
                                                    "properties": {
                                                        "batch_id": {
                                                            "type": "string",
                                                            "example": "uuid-string"
                                                        },
                                                        "batch_name": {
                                                            "type": "string",
                                                            "example": "Web Dev Batch 2024-A"
                                                        },
                                                        "start_date": {
                                                            "type": "string",
                                                            "example": "2024-02-01"
                                                        },
                                                        "end_date": {
                                                            "type": "string",
                                                            "example": "2024-04-01"
                                                        },
                                                        "status": {
                                                            "type": "string",
                                                            "example": "active"
                                                        },
                                                        "course": {
                                                            "properties": {
                                                                "course_id": {
                                                                    "type": "string",
                                                                    "example": "uuid-string"
                                                                },
                                                                "title": {
                                                                    "type": "string",
                                                                    "example": "Web Development Fundamentals"
                                                                },
                                                                "description": {
                                                                    "type": "string",
                                                                    "example": "Learn web development from basics"
                                                                },
                                                                "difficulty_level": {
                                                                    "type": "string",
                                                                    "example": "beginner"
                                                                },
                                                                "estimated_duration_hours": {
                                                                    "type": "integer",
                                                                    "example": 40
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "progress_details": {
                                                    "properties": {
                                                        "total_modules": {
                                                            "type": "integer",
                                                            "example": 6
                                                        },
                                                        "completed_modules": {
                                                            "type": "integer",
                                                            "example": 4
                                                        },
                                                        "total_lessons": {
                                                            "type": "integer",
                                                            "example": 24
                                                        },
                                                        "completed_lessons": {
                                                            "type": "integer",
                                                            "example": 16
                                                        },
                                                        "total_assessments": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "completed_assessments": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "average_score": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 85.5
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Enrollment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Enrollment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "User Enrollments"
                ],
                "summary": "Update enrollment status",
                "description": "Update the status of an enrollment (e.g., drop from course)",
                "operationId": "cd3bc516213a3bf200e9143517f430e7",
                "parameters": [
                    {
                        "name": "enrollment_id",
                        "in": "path",
                        "description": "The enrollment ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "description": "New status",
                                        "type": "string",
                                        "enum": [
                                            "dropped"
                                        ],
                                        "example": "dropped"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Enrollment status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "enrollment_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "dropped"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-20T10:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Enrollment status updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot drop enrollment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Can only drop active enrollments"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Enrollment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Enrollment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The status field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The status field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/forum": {
            "get": {
                "tags": [
                    "User Forum"
                ],
                "summary": "Get forums",
                "description": "Get forums for user's enrolled batches",
                "operationId": "25ac21638349426093b5a5f2fe9f91d4",
                "responses": {
                    "200": {
                        "description": "Available forums",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "forum_id": {
                                                        "type": "string",
                                                        "example": "uuid-string"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "General Discussion"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "General course discussions"
                                                    },
                                                    "topics_count": {
                                                        "type": "integer",
                                                        "example": 25
                                                    },
                                                    "latest_activity": {
                                                        "type": "string",
                                                        "example": "2024-01-20T10:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/messages": {
            "get": {
                "tags": [
                    "User Messaging"
                ],
                "summary": "Get user messages",
                "description": "Get all messages for the authenticated user",
                "operationId": "40c88772ea9718c9fd328fade471f4ec",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by message type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "received",
                                "sent"
                            ],
                            "example": "received"
                        }
                    },
                    {
                        "name": "batch_id",
                        "in": "query",
                        "description": "Filter by batch ID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    },
                    {
                        "name": "is_read",
                        "in": "query",
                        "description": "Filter by read status",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": false
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of messages per page (max 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 50,
                            "minimum": 1,
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User messages retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "message_id": {
                                                        "type": "string",
                                                        "example": "uuid-string"
                                                    },
                                                    "subject": {
                                                        "type": "string",
                                                        "example": "Assignment Deadline Reminder"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "example": "Don't forget to submit your HTML project by Friday."
                                                    },
                                                    "sender": {
                                                        "properties": {
                                                            "user_id": {
                                                                "type": "string",
                                                                "example": "uuid-string"
                                                            },
                                                            "first_name": {
                                                                "type": "string",
                                                                "example": "John"
                                                            },
                                                            "last_name": {
                                                                "type": "string",
                                                                "example": "Instructor"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john@example.com"
                                                            },
                                                            "profile_picture": {
                                                                "type": "string",
                                                                "example": "path/to/image.jpg"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "batch": {
                                                        "properties": {
                                                            "batch_id": {
                                                                "type": "string",
                                                                "example": "uuid-string"
                                                            },
                                                            "batch_name": {
                                                                "type": "string",
                                                                "example": "Web Dev Batch 2024-A"
                                                            },
                                                            "course_title": {
                                                                "type": "string",
                                                                "example": "Web Development Fundamentals"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "is_read": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "sent_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-01-20T14:30:00Z"
                                                    },
                                                    "read_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": null,
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 45
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Messaging"
                ],
                "summary": "Send a message",
                "description": "Send a message to another user in the same batch",
                "operationId": "91ad139857204eab6981df362465ff6a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "recipient_id",
                                    "batch_id",
                                    "subject",
                                    "content"
                                ],
                                "properties": {
                                    "recipient_id": {
                                        "description": "Recipient user ID",
                                        "type": "string",
                                        "example": "uuid-string"
                                    },
                                    "batch_id": {
                                        "description": "Batch context for the message",
                                        "type": "string",
                                        "example": "uuid-string"
                                    },
                                    "subject": {
                                        "description": "Message subject",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Question about Assignment"
                                    },
                                    "content": {
                                        "description": "Message content",
                                        "type": "string",
                                        "maxLength": 2000,
                                        "example": "I need help with the CSS flexbox exercise."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Message sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "subject": {
                                                    "type": "string",
                                                    "example": "Question about Assignment"
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "example": "I need help with the CSS flexbox exercise."
                                                },
                                                "recipient": {
                                                    "properties": {
                                                        "user_id": {
                                                            "type": "string",
                                                            "example": "uuid-string"
                                                        },
                                                        "first_name": {
                                                            "type": "string",
                                                            "example": "Jane"
                                                        },
                                                        "last_name": {
                                                            "type": "string",
                                                            "example": "Student"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "jane@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "batch": {
                                                    "properties": {
                                                        "batch_id": {
                                                            "type": "string",
                                                            "example": "uuid-string"
                                                        },
                                                        "batch_name": {
                                                            "type": "string",
                                                            "example": "Web Dev Batch 2024-A"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "sent_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-20T16:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Message sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Cannot send message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot send message"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Recipient not in the same batch"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "recipient_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The recipient id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/messages/{message_id}/read": {
            "patch": {
                "tags": [
                    "User Messaging"
                ],
                "summary": "Mark message as read",
                "description": "Mark a received message as read",
                "operationId": "264745001aad3e4d9f30b151a2995824",
                "parameters": [
                    {
                        "name": "message_id",
                        "in": "path",
                        "description": "The message ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message marked as read successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Message marked as read"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Message not found or already read",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Message not found or already read"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/forum/topics": {
            "get": {
                "tags": [
                    "User Messaging"
                ],
                "summary": "Get forum topics",
                "description": "Get forum topics for user's enrolled batches",
                "operationId": "c55d83aad13dbb2e0b91b3ec9dbae901",
                "parameters": [
                    {
                        "name": "batch_id",
                        "in": "query",
                        "description": "Filter by batch ID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of topics per page (max 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 50,
                            "minimum": 1,
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Forum topics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "topic_id": {
                                                        "type": "string",
                                                        "example": "uuid-string"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Discussion: CSS Grid vs Flexbox"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Let's discuss when to use CSS Grid vs Flexbox"
                                                    },
                                                    "author": {
                                                        "properties": {
                                                            "user_id": {
                                                                "type": "string",
                                                                "example": "uuid-string"
                                                            },
                                                            "first_name": {
                                                                "type": "string",
                                                                "example": "John"
                                                            },
                                                            "last_name": {
                                                                "type": "string",
                                                                "example": "Instructor"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john@example.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "batch": {
                                                        "properties": {
                                                            "batch_id": {
                                                                "type": "string",
                                                                "example": "uuid-string"
                                                            },
                                                            "batch_name": {
                                                                "type": "string",
                                                                "example": "Web Dev Batch 2024-A"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "replies_count": {
                                                        "type": "integer",
                                                        "example": 12
                                                    },
                                                    "latest_reply": {
                                                        "properties": {
                                                            "reply_id": {
                                                                "type": "string",
                                                                "example": "uuid-string"
                                                            },
                                                            "author_name": {
                                                                "type": "string",
                                                                "example": "Jane Student"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-01-20T15:30:00Z"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-01-19T10:00:00Z"
                                                    },
                                                    "is_pinned": {
                                                        "type": "boolean",
                                                        "example": false
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Messaging"
                ],
                "summary": "Create forum topic",
                "description": "Create a new forum topic in a batch",
                "operationId": "d3d06091a7169855d0f814d56495f516",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "batch_id",
                                    "title",
                                    "description"
                                ],
                                "properties": {
                                    "batch_id": {
                                        "description": "Batch ID where topic will be created",
                                        "type": "string",
                                        "example": "uuid-string"
                                    },
                                    "title": {
                                        "description": "Topic title",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Need Help with JavaScript Arrays"
                                    },
                                    "description": {
                                        "description": "Topic description/content",
                                        "type": "string",
                                        "maxLength": 2000,
                                        "example": "I'm struggling with array methods. Can someone explain map() vs forEach()?"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Forum topic created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "topic_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Need Help with JavaScript Arrays"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "I'm struggling with array methods. Can someone explain map() vs forEach()?"
                                                },
                                                "author": {
                                                    "properties": {
                                                        "user_id": {
                                                            "type": "string",
                                                            "example": "uuid-string"
                                                        },
                                                        "first_name": {
                                                            "type": "string",
                                                            "example": "Jane"
                                                        },
                                                        "last_name": {
                                                            "type": "string",
                                                            "example": "Student"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "batch": {
                                                    "properties": {
                                                        "batch_id": {
                                                            "type": "string",
                                                            "example": "uuid-string"
                                                        },
                                                        "batch_name": {
                                                            "type": "string",
                                                            "example": "Web Dev Batch 2024-A"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-20T16:45:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Forum topic created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not enrolled in batch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not enrolled in this batch"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/forum/topics/{topic_id}": {
            "get": {
                "tags": [
                    "User Messaging"
                ],
                "summary": "Get forum topic with replies",
                "description": "Get a specific forum topic with all its replies",
                "operationId": "7c05726af4fd89bae5d2993fd9b39a7c",
                "parameters": [
                    {
                        "name": "topic_id",
                        "in": "path",
                        "description": "The topic ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of replies per page (max 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 50,
                            "minimum": 1,
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Forum topic with replies retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "topic": {
                                                    "properties": {
                                                        "topic_id": {
                                                            "type": "string",
                                                            "example": "uuid-string"
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Discussion: CSS Grid vs Flexbox"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Let's discuss when to use CSS Grid vs Flexbox"
                                                        },
                                                        "author": {
                                                            "properties": {
                                                                "user_id": {
                                                                    "type": "string",
                                                                    "example": "uuid-string"
                                                                },
                                                                "first_name": {
                                                                    "type": "string",
                                                                    "example": "John"
                                                                },
                                                                "last_name": {
                                                                    "type": "string",
                                                                    "example": "Instructor"
                                                                },
                                                                "email": {
                                                                    "type": "string",
                                                                    "example": "john@example.com"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-01-19T10:00:00Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "replies": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "reply_id": {
                                                                "type": "string",
                                                                "example": "uuid-string"
                                                            },
                                                            "reply_text": {
                                                                "type": "string",
                                                                "example": "I think CSS Grid is better for 2D layouts..."
                                                            },
                                                            "author": {
                                                                "properties": {
                                                                    "user_id": {
                                                                        "type": "string",
                                                                        "example": "uuid-string"
                                                                    },
                                                                    "first_name": {
                                                                        "type": "string",
                                                                        "example": "Jane"
                                                                    },
                                                                    "last_name": {
                                                                        "type": "string",
                                                                        "example": "Student"
                                                                    },
                                                                    "profile_picture": {
                                                                        "type": "string",
                                                                        "example": "path/to/image.jpg"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-01-19T14:30:00Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 12
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Topic not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\BatchForumTopic]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/forum/topics/{topic_id}/replies": {
            "post": {
                "tags": [
                    "User Messaging"
                ],
                "summary": "Reply to forum topic",
                "description": "Add a reply to a forum topic",
                "operationId": "43c4a5f65d04538405d1c5257e08a411",
                "parameters": [
                    {
                        "name": "topic_id",
                        "in": "path",
                        "description": "The topic ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reply_text"
                                ],
                                "properties": {
                                    "reply_text": {
                                        "description": "Reply content",
                                        "type": "string",
                                        "maxLength": 2000,
                                        "example": "Great explanation! I agree that Grid is perfect for complex layouts."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Reply added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "reply_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "reply_text": {
                                                    "type": "string",
                                                    "example": "Great explanation! I agree that Grid is perfect for complex layouts."
                                                },
                                                "author": {
                                                    "properties": {
                                                        "user_id": {
                                                            "type": "string",
                                                            "example": "uuid-string"
                                                        },
                                                        "first_name": {
                                                            "type": "string",
                                                            "example": "Mike"
                                                        },
                                                        "last_name": {
                                                            "type": "string",
                                                            "example": "Student"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-20T17:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reply added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Topic not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\BatchForumTopic]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "reply_text": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The reply text field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/notifications": {
            "get": {
                "tags": [
                    "User Notifications"
                ],
                "summary": "Get user notifications",
                "description": "Get all notifications for the authenticated user",
                "operationId": "9617ee6a891d459ba2173e2a9aeec8f2",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by notification type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "announcement",
                                "assignment",
                                "assessment",
                                "message",
                                "reminder",
                                "certificate"
                            ],
                            "example": "assignment"
                        }
                    },
                    {
                        "name": "is_read",
                        "in": "query",
                        "description": "Filter by read status",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": false
                        }
                    },
                    {
                        "name": "batch_id",
                        "in": "query",
                        "description": "Filter by batch ID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of notifications per page (max 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User notifications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "notification_id": {
                                                        "type": "string",
                                                        "example": "uuid-string"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "New Assignment Posted"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "A new HTML/CSS assignment has been posted for your batch"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "assignment"
                                                    },
                                                    "priority": {
                                                        "type": "string",
                                                        "example": "medium"
                                                    },
                                                    "is_read": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "sent_at": {
                                                        "type": "string",
                                                        "example": "2024-01-20T14:30:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/notifications/{notification_id}/read": {
            "patch": {
                "tags": [
                    "User Notifications"
                ],
                "summary": "Mark notification as read",
                "description": "Mark a specific notification as read",
                "operationId": "dea223cdf083a479747f15fe49e06e09",
                "parameters": [
                    {
                        "name": "notification_id",
                        "in": "path",
                        "description": "The notification ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification marked as read successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Notification marked as read"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notification not found or already read",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Notification not found or already read"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/notifications/mark-all-read": {
            "patch": {
                "tags": [
                    "User Notifications"
                ],
                "summary": "Mark all notifications as read",
                "description": "Mark all unread notifications as read for the authenticated user",
                "operationId": "451f68d69d457f3cc3e1880c686d7067",
                "parameters": [
                    {
                        "name": "batch_id",
                        "in": "query",
                        "description": "Optional: Mark as read only for specific batch",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All notifications marked as read successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All notifications marked as read"
                                        },
                                        "marked_count": {
                                            "type": "integer",
                                            "example": 12
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/notifications/preferences": {
            "put": {
                "tags": [
                    "User Notifications"
                ],
                "summary": "Update notification preferences",
                "description": "Update user's notification preferences",
                "operationId": "26be55d0e81812dd75b306bc103fd290",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email_notifications": {
                                        "description": "Enable/disable email notifications",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "push_notifications": {
                                        "description": "Enable/disable push notifications",
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "notification_types": {
                                        "description": "Notification type preferences",
                                        "properties": {
                                            "announcement": {
                                                "description": "Enable announcement notifications",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "assignment": {
                                                "description": "Enable assignment notifications",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "assessment": {
                                                "description": "Enable assessment notifications",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "message": {
                                                "description": "Enable message notifications",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "reminder": {
                                                "description": "Enable reminder notifications",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "certificate": {
                                                "description": "Enable certificate notifications",
                                                "type": "boolean",
                                                "example": true
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "quiet_hours": {
                                        "description": "Quiet hours configuration",
                                        "properties": {
                                            "enabled": {
                                                "description": "Enable quiet hours",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "start_time": {
                                                "description": "Quiet hours start time (HH:MM format)",
                                                "type": "string",
                                                "example": "22:00"
                                            },
                                            "end_time": {
                                                "description": "Quiet hours end time (HH:MM format)",
                                                "type": "string",
                                                "example": "08:00"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Notification preferences updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Notification preferences updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "email_notifications": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "push_notifications": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "notification_types": {
                                                    "properties": {
                                                        "announcement": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "assignment": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "assessment": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "message": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "reminder": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "certificate": {
                                                            "type": "boolean",
                                                            "example": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "quiet_hours": {
                                                    "properties": {
                                                        "enabled": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "start_time": {
                                                            "type": "string",
                                                            "example": "22:00"
                                                        },
                                                        "end_time": {
                                                            "type": "string",
                                                            "example": "08:00"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/payments": {
            "get": {
                "tags": [
                    "User Payments"
                ],
                "summary": "Get user payment history",
                "description": "Get all payments made by the authenticated user",
                "operationId": "a903dabbd760427aa231cd4f2ce27648",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by payment status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "initiated",
                                "processing",
                                "completed",
                                "failed",
                                "refunded"
                            ],
                            "example": "completed"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Filter by payment method",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "card",
                                "mobile_banking",
                                "bank_transfer"
                            ],
                            "example": "card"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of payments per page (max 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "payment_id": {
                                                        "type": "string",
                                                        "example": "uuid-string"
                                                    },
                                                    "amount": {
                                                        "type": "number",
                                                        "example": 5000
                                                    },
                                                    "currency": {
                                                        "type": "string",
                                                        "example": "BDT"
                                                    },
                                                    "method": {
                                                        "type": "string",
                                                        "example": "card"
                                                    },
                                                    "transaction_id": {
                                                        "type": "string",
                                                        "example": "TXN123456789"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "completed"
                                                    },
                                                    "paid_at": {
                                                        "type": "string",
                                                        "example": "2024-01-20T14:30:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/payments/course": {
            "post": {
                "tags": [
                    "User Payments"
                ],
                "summary": "Initiate course payment",
                "description": "Start a new payment for course enrollment",
                "operationId": "b2cd03121d4cc89ea80fa4959d25419f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "batch_id",
                                    "payment_method"
                                ],
                                "properties": {
                                    "batch_id": {
                                        "description": "Batch ID to enroll in",
                                        "type": "string",
                                        "example": "uuid-string"
                                    },
                                    "payment_method": {
                                        "description": "Payment method",
                                        "type": "string",
                                        "enum": [
                                            "card",
                                            "mobile_banking",
                                            "bank_transfer"
                                        ],
                                        "example": "card"
                                    },
                                    "return_url": {
                                        "description": "Return URL after payment completion",
                                        "type": "string",
                                        "example": "https://example.com/payment/success"
                                    },
                                    "cancel_url": {
                                        "description": "Cancel URL if payment is cancelled",
                                        "type": "string",
                                        "example": "https://example.com/payment/cancel"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment initiated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "payment_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "order_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 5000
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "BDT"
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "example": "card"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "initiated"
                                                },
                                                "payment_url": {
                                                    "type": "string",
                                                    "example": "https://payment-gateway.com/pay/uuid-string"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-20T15:00:00Z"
                                                },
                                                "batch": {
                                                    "properties": {
                                                        "batch_id": {
                                                            "type": "string",
                                                            "example": "uuid-string"
                                                        },
                                                        "batch_name": {
                                                            "type": "string",
                                                            "example": "Web Dev Batch 2024-A"
                                                        },
                                                        "course_title": {
                                                            "type": "string",
                                                            "example": "Web Development Fundamentals"
                                                        },
                                                        "price": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 5000
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment initiated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot initiate payment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot initiate payment"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Batch is full"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "batch_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The batch id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/payments/callback": {
            "post": {
                "tags": [
                    "User Payments"
                ],
                "summary": "Payment callback/webhook",
                "description": "Handle payment gateway callback to update payment status",
                "operationId": "a1a8a3d3ca98d889e231ab2e24288838",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payment_id",
                                    "transaction_id",
                                    "status",
                                    "signature"
                                ],
                                "properties": {
                                    "payment_id": {
                                        "description": "Payment ID",
                                        "type": "string",
                                        "example": "uuid-string"
                                    },
                                    "transaction_id": {
                                        "description": "Transaction ID from gateway",
                                        "type": "string",
                                        "example": "TXN123456789"
                                    },
                                    "status": {
                                        "description": "Payment status",
                                        "type": "string",
                                        "enum": [
                                            "completed",
                                            "failed"
                                        ],
                                        "example": "completed"
                                    },
                                    "signature": {
                                        "description": "Payment gateway signature for verification",
                                        "type": "string",
                                        "example": "signature-hash"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment processed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "payment_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "enrollment_status": {
                                                    "type": "string",
                                                    "example": "active"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid signature or payment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid signature"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "payment_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The payment id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/profile": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Get user profile",
                "description": "Get the authenticated user's complete profile information",
                "operationId": "7263f982fed939320696f49aae69e0d6",
                "responses": {
                    "200": {
                        "description": "User profile information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+8801234567890"
                                                },
                                                "avatar_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/storage/profiles/user.jpg"
                                                },
                                                "bio": {
                                                    "type": "string",
                                                    "example": "Passionate web developer learning new technologies"
                                                },
                                                "timezone": {
                                                    "type": "string",
                                                    "example": "Asia/Dhaka"
                                                },
                                                "language": {
                                                    "type": "string",
                                                    "example": "en"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-01-15T10:00:00Z"
                                                },
                                                "email_verified": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Update user profile",
                "description": "Update the authenticated user's profile information",
                "operationId": "711fa0464825312ffa2d5906c8caaa68",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+8801234567890"
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "Updated bio description"
                                    },
                                    "timezone": {
                                        "type": "string",
                                        "example": "Asia/Dhaka"
                                    },
                                    "language": {
                                        "type": "string",
                                        "example": "en"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Smith"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+8801234567890"
                                                },
                                                "bio": {
                                                    "type": "string",
                                                    "example": "Updated bio description"
                                                },
                                                "timezone": {
                                                    "type": "string",
                                                    "example": "Asia/Dhaka"
                                                },
                                                "language": {
                                                    "type": "string",
                                                    "example": "en"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2024-01-20T15:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/profile/upload-picture": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Upload profile picture",
                "description": "Upload or update the user's profile picture",
                "operationId": "00c1509883524c509c733f753d07e222",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "avatar": {
                                        "description": "Profile picture image (max 2MB, jpg/png/jpeg)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile picture uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "avatar_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/storage/avatars/user-uuid.jpg"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Avatar updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The avatar field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "avatar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The avatar field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/profile/change-password": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Change password",
                "description": "Change the user's password",
                "operationId": "02f0db6cefd0e6ce8493021df6b56de9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "new_password",
                                    "new_password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "description": "Current password",
                                        "type": "string"
                                    },
                                    "new_password": {
                                        "description": "New password (min 8 characters)",
                                        "type": "string"
                                    },
                                    "new_password_confirmation": {
                                        "description": "New password confirmation",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid current password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid current password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The current password field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "current_password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The current password field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/profile/addresses": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get user addresses",
                "description": "Get all addresses for the authenticated user",
                "operationId": "ad9058717f07841cb31f68f91632035d",
                "responses": {
                    "200": {
                        "description": "Addresses retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "address_id": {
                                                        "type": "string",
                                                        "example": "uuid-string"
                                                    },
                                                    "address_type": {
                                                        "type": "string",
                                                        "example": "home"
                                                    },
                                                    "street_address": {
                                                        "type": "string",
                                                        "example": "123 Main Street"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "example": "Dhaka"
                                                    },
                                                    "state": {
                                                        "type": "string",
                                                        "example": "Dhaka"
                                                    },
                                                    "postal_code": {
                                                        "type": "string",
                                                        "example": "1000"
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "example": "Bangladesh"
                                                    },
                                                    "is_primary": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-01-15T10:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Add new address",
                "description": "Add a new address for the user",
                "operationId": "0c457724180ba73ea20a6546f5317608",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "address_type",
                                    "street_address",
                                    "city",
                                    "state",
                                    "postal_code",
                                    "country"
                                ],
                                "properties": {
                                    "address_type": {
                                        "description": "Address type",
                                        "type": "string",
                                        "enum": [
                                            "home",
                                            "work",
                                            "other"
                                        ]
                                    },
                                    "street_address": {
                                        "description": "Street address",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "city": {
                                        "description": "City",
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "state": {
                                        "description": "State/Province",
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "postal_code": {
                                        "description": "Postal code",
                                        "type": "string",
                                        "maxLength": 20
                                    },
                                    "country": {
                                        "description": "Country",
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "is_primary": {
                                        "description": "Set as primary address",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Address added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "address_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "address_type": {
                                                    "type": "string",
                                                    "example": "home"
                                                },
                                                "street_address": {
                                                    "type": "string",
                                                    "example": "456 New Street"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "Chittagong"
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "example": "Chittagong"
                                                },
                                                "postal_code": {
                                                    "type": "string",
                                                    "example": "4000"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "example": "Bangladesh"
                                                },
                                                "is_primary": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-20T16:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Address added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The address type field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "address_type": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The address type field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/profile/addresses/{address_id}": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update address",
                "description": "Update an existing address",
                "operationId": "0a615de4c7092c3a1bd5b2f455175f3b",
                "parameters": [
                    {
                        "name": "address_id",
                        "in": "path",
                        "description": "The address ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "address_type": {
                                        "description": "Address type",
                                        "type": "string",
                                        "enum": [
                                            "home",
                                            "work",
                                            "other"
                                        ]
                                    },
                                    "street_address": {
                                        "description": "Street address",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "city": {
                                        "description": "City",
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "state": {
                                        "description": "State/Province",
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "postal_code": {
                                        "description": "Postal code",
                                        "type": "string",
                                        "maxLength": 20
                                    },
                                    "country": {
                                        "description": "Country",
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "is_primary": {
                                        "description": "Set as primary address",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "address_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "address_type": {
                                                    "type": "string",
                                                    "example": "work"
                                                },
                                                "street_address": {
                                                    "type": "string",
                                                    "example": "456 Updated Street"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "Dhaka"
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "example": "Dhaka"
                                                },
                                                "postal_code": {
                                                    "type": "string",
                                                    "example": "1200"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "example": "Bangladesh"
                                                },
                                                "is_primary": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-20T16:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Address updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Address not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "address_type": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected address type is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Profile"
                ],
                "summary": "Delete address",
                "description": "Delete an address",
                "operationId": "3a62667d40765b152be3101d04ab9a16",
                "parameters": [
                    {
                        "name": "address_id",
                        "in": "path",
                        "description": "The address ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Address deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Address not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/progress/course/{enrollment_id}": {
            "get": {
                "tags": [
                    "Learning Progress"
                ],
                "summary": "Get course progress",
                "description": "Get detailed learning progress for a specific enrollment",
                "operationId": "1ead7b8dd1f7dc86e0b974c5ddfe5aab",
                "parameters": [
                    {
                        "name": "enrollment_id",
                        "in": "path",
                        "description": "The enrollment ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course progress retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "enrollment_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "course_title": {
                                                    "type": "string",
                                                    "example": "Web Development Fundamentals"
                                                },
                                                "overall_progress": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 65.5
                                                },
                                                "modules": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "module_id": {
                                                                "type": "string",
                                                                "example": "uuid-string"
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "HTML Basics"
                                                            },
                                                            "order_index": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "progress_percentage": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 100
                                                            },
                                                            "completed_lessons": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "total_lessons": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "lessons": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "lesson_id": {
                                                                            "type": "string",
                                                                            "example": "uuid-string"
                                                                        },
                                                                        "title": {
                                                                            "type": "string",
                                                                            "example": "Introduction to HTML"
                                                                        },
                                                                        "order_index": {
                                                                            "type": "integer",
                                                                            "example": 1
                                                                        },
                                                                        "duration_minutes": {
                                                                            "type": "integer",
                                                                            "example": 30
                                                                        },
                                                                        "lesson_type": {
                                                                            "type": "string",
                                                                            "example": "video"
                                                                        },
                                                                        "progress": {
                                                                            "properties": {
                                                                                "status": {
                                                                                    "type": "string",
                                                                                    "example": "completed"
                                                                                },
                                                                                "completion_percentage": {
                                                                                    "type": "number",
                                                                                    "format": "float",
                                                                                    "example": 100
                                                                                },
                                                                                "time_spent_minutes": {
                                                                                    "type": "integer",
                                                                                    "example": 35
                                                                                },
                                                                                "last_accessed_at": {
                                                                                    "type": "string",
                                                                                    "format": "date-time",
                                                                                    "example": "2024-01-20T14:30:00Z"
                                                                                },
                                                                                "completed_at": {
                                                                                    "type": "string",
                                                                                    "format": "date-time",
                                                                                    "example": "2024-01-18T16:45:00Z"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "statistics": {
                                                    "properties": {
                                                        "total_time_spent_hours": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 25.5
                                                        },
                                                        "lessons_completed": {
                                                            "type": "integer",
                                                            "example": 16
                                                        },
                                                        "lessons_total": {
                                                            "type": "integer",
                                                            "example": 24
                                                        },
                                                        "modules_completed": {
                                                            "type": "integer",
                                                            "example": 4
                                                        },
                                                        "modules_total": {
                                                            "type": "integer",
                                                            "example": 6
                                                        },
                                                        "completion_rate": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 66.7
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Enrollment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Enrollment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/progress/lesson/{lesson_id}": {
            "post": {
                "tags": [
                    "Learning Progress"
                ],
                "summary": "Update lesson progress",
                "description": "Update or create progress for a specific lesson",
                "operationId": "594cfd92becd3165944d23f45b949fb0",
                "parameters": [
                    {
                        "name": "lesson_id",
                        "in": "path",
                        "description": "The lesson ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status",
                                    "completion_percentage"
                                ],
                                "properties": {
                                    "status": {
                                        "description": "Progress status",
                                        "type": "string",
                                        "enum": [
                                            "in_progress",
                                            "completed"
                                        ]
                                    },
                                    "completion_percentage": {
                                        "description": "Progress percentage (0-100)",
                                        "type": "integer",
                                        "maximum": 100,
                                        "minimum": 0
                                    },
                                    "time_spent_minutes": {
                                        "description": "Time spent on lesson in minutes",
                                        "type": "integer",
                                        "minimum": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Progress updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "progress_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "lesson_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "completion_percentage": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "time_spent_minutes": {
                                                    "type": "integer",
                                                    "example": 35
                                                },
                                                "completed_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-20T16:45:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-20T16:45:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Progress updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not enrolled in this lesson's course",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not enrolled in this lesson's course"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Lesson not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The status field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The status field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/progress/lesson/{lesson_id}/content": {
            "get": {
                "tags": [
                    "Learning Progress"
                ],
                "summary": "Get lesson content",
                "description": "Get lesson content and resources for enrolled users",
                "operationId": "8b9da11dc42a8614e85018394d2e66d7",
                "parameters": [
                    {
                        "name": "lesson_id",
                        "in": "path",
                        "description": "The lesson ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lesson content retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "lesson_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Introduction to HTML"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Learn the basics of HTML structure"
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "example": "HTML lesson content here..."
                                                },
                                                "lesson_type": {
                                                    "type": "string",
                                                    "example": "video"
                                                },
                                                "duration_minutes": {
                                                    "type": "integer",
                                                    "example": 30
                                                },
                                                "order_index": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "video_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/video.mp4"
                                                },
                                                "is_preview": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "module": {
                                                    "properties": {
                                                        "module_id": {
                                                            "type": "string",
                                                            "example": "uuid-string"
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "HTML Basics"
                                                        },
                                                        "order_index": {
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "resources": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "resource_id": {
                                                                "type": "string",
                                                                "example": "uuid-string"
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "HTML Cheat Sheet"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Quick reference for HTML tags"
                                                            },
                                                            "resource_type": {
                                                                "type": "string",
                                                                "example": "document"
                                                            },
                                                            "file_url": {
                                                                "type": "string",
                                                                "example": "https://example.com/cheatsheet.pdf"
                                                            },
                                                            "file_size_mb": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 2.5
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "progress": {
                                                    "properties": {
                                                        "status": {
                                                            "type": "string",
                                                            "example": "in_progress"
                                                        },
                                                        "completion_percentage": {
                                                            "type": "integer",
                                                            "example": 75
                                                        },
                                                        "time_spent_minutes": {
                                                            "type": "integer",
                                                            "example": 25
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied. You must be enrolled to view this lesson."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Lesson not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/reviews": {
            "get": {
                "tags": [
                    "User Reviews"
                ],
                "summary": "Get user reviews",
                "description": "Get all reviews submitted by the authenticated user",
                "operationId": "e602159e449bbb1ef87ca984663d907e",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of reviews per page (max 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User reviews",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "review_id": {
                                                        "type": "string",
                                                        "example": "uuid-string"
                                                    },
                                                    "rating": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "review_text": {
                                                        "type": "string",
                                                        "example": "Excellent course content and teaching"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-01-20T10:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Reviews"
                ],
                "summary": "Submit course review",
                "description": "Submit a review for a completed course batch",
                "operationId": "666b77f80d1925674419cac0e25b96b3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "batch_id",
                                    "rating",
                                    "review_text"
                                ],
                                "properties": {
                                    "batch_id": {
                                        "description": "Batch ID to review",
                                        "type": "string",
                                        "example": "uuid-string"
                                    },
                                    "rating": {
                                        "description": "Rating from 1-5",
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 5
                                    },
                                    "review_text": {
                                        "description": "Review content",
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "Amazing course! The instructor was very knowledgeable."
                                    },
                                    "is_public": {
                                        "description": "Make review public",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "review_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "batch_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "rating": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "review_text": {
                                                    "type": "string",
                                                    "example": "Amazing course! The instructor was very knowledgeable."
                                                },
                                                "is_public": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "batch": {
                                                    "properties": {
                                                        "batch_id": {
                                                            "type": "string",
                                                            "example": "uuid-string"
                                                        },
                                                        "batch_name": {
                                                            "type": "string",
                                                            "example": "Web Dev Batch 2024-A"
                                                        },
                                                        "course": {
                                                            "properties": {
                                                                "course_id": {
                                                                    "type": "string",
                                                                    "example": "uuid-string"
                                                                },
                                                                "title": {
                                                                    "type": "string",
                                                                    "example": "Web Development Fundamentals"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-20T16:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Review submitted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot submit review",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot submit review"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Not enrolled in this batch"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "rating": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The rating field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/reviews/{review_id}": {
            "patch": {
                "tags": [
                    "User Reviews"
                ],
                "summary": "Update review",
                "description": "Update an existing review",
                "operationId": "934bb5519e71e3d115fecea2fbea22b5",
                "parameters": [
                    {
                        "name": "review_id",
                        "in": "path",
                        "description": "The review ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rating": {
                                        "description": "Rating from 1-5",
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 4
                                    },
                                    "review_text": {
                                        "description": "Review content",
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "Updated review text"
                                    },
                                    "is_public": {
                                        "description": "Make review public",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "review_id": {
                                                    "type": "string",
                                                    "example": "uuid-string"
                                                },
                                                "rating": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "review_text": {
                                                    "type": "string",
                                                    "example": "Updated review text"
                                                },
                                                "is_public": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-20T17:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Review updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to update this review",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/schedule": {
            "get": {
                "tags": [
                    "User Schedule"
                ],
                "summary": "Get user schedule",
                "description": "Get user's class schedule",
                "operationId": "1dd1262d344fa78e645f6d0f3680c3c3",
                "parameters": [
                    {
                        "name": "batch_id",
                        "in": "query",
                        "description": "Filter by batch ID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter from date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-20"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User schedule",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "schedule_id": {
                                                        "type": "string",
                                                        "example": "uuid-string"
                                                    },
                                                    "class_date": {
                                                        "type": "string",
                                                        "example": "2024-01-20"
                                                    },
                                                    "start_time": {
                                                        "type": "string",
                                                        "example": "19:00:00"
                                                    },
                                                    "end_time": {
                                                        "type": "string",
                                                        "example": "21:00:00"
                                                    },
                                                    "topic": {
                                                        "type": "string",
                                                        "example": "JavaScript Fundamentals"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "scheduled"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter token in format: Bearer your-token-here",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Public Batches",
            "description": "Public endpoints for browsing available course batches"
        },
        {
            "name": "Public Categories",
            "description": "Public endpoints for browsing course categories"
        },
        {
            "name": "Public Courses",
            "description": "Public endpoints for browsing available courses"
        },
        {
            "name": "User Assessments",
            "description": "Endpoints for taking assessments and viewing results (requires authentication)"
        },
        {
            "name": "User Certificates",
            "description": "Endpoints for managing user certificates (requires authentication)"
        },
        {
            "name": "User Enrollments",
            "description": "Endpoints for managing course enrollments (requires authentication)"
        },
        {
            "name": "User Forum",
            "description": "Endpoints for forum discussions and topics (requires authentication)"
        },
        {
            "name": "User Messaging",
            "description": "Endpoints for messaging and forum communication (requires authentication)"
        },
        {
            "name": "User Notifications",
            "description": "Endpoints for managing user notifications (requires authentication)"
        },
        {
            "name": "User Payments",
            "description": "Endpoints for managing payments and course purchases (requires authentication)"
        },
        {
            "name": "User Profile",
            "description": "Endpoints for managing user profile (requires authentication)"
        },
        {
            "name": "User Reviews",
            "description": "Endpoints for managing course reviews (requires authentication)"
        },
        {
            "name": "User Schedule",
            "description": "Endpoints for managing class schedules and attendance (requires authentication)"
        },
        {
            "name": "Authentication",
            "description": "User authentication and token management"
        },
        {
            "name": "Profile",
            "description": "Profile"
        },
        {
            "name": "Learning Progress",
            "description": "Learning Progress"
        }
    ]
}